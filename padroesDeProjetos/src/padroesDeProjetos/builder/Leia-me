Builder (Construtor): separa a construção de um objeto complexo de sua representação, permitindo a criação passo a passo.

O padrão de projeto Builder é um padrão de criação que separa a construção de um objeto complexo de sua representação, 
permitindo a criação passo a passo. Ele fornece uma maneira mais flexível de criar objetos, permitindo diferentes 
configurações e variações sem poluir o construtor com muitos parâmetros.

Vamos supor que estamos desenvolvendo um sistema de construção de casas e queremos criar objetos "Casa" com diferentes 
configurações, como número de quartos, tamanho do jardim, etc.

1º - Definir a classe "Casa" que desejamos construir.

2º - Criando a classe Builder para a construção da Casa.

3º - Agora, podemos usar o builder para criar objetos Casa de forma flexível.

O padrão Builder permite que criemos objetos Casa de forma flexível e passo a passo. O Builder (CasaBuilder) possui 
métodos para configurar os atributos opcionais (como número de quartos e tamanho do jardim) e retorna a própria 
instância do builder, permitindo a construção encadeada (chaining) dos métodos. No final, chamamos o método 
construir() para obter o objeto Casa com as configurações desejadas.

O padrão Builder é especialmente útil quando um objeto possui muitos atributos opcionais ou quando a criação do objeto 
envolve várias etapas complexas. Ele simplifica a criação e permite a reutilização do código de configuração.

